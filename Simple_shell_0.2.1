#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define BUFFER_SIZE 1024
#define TOKEN_DELIMITERS " \t\n"

char **tokenize_input(char *input) {
    char **tokens = malloc(BUFFER_SIZE * sizeof(char *));
    if (tokens == NULL) {
        perror("Unable to allocate memory");
        exit(1);
    }

    int token_count = 0;
    char *token = strtok(input, TOKEN_DELIMITERS);
    while (token != NULL) {
        tokens[token_count++] = token;
        token = strtok(NULL, TOKEN_DELIMITERS);
    }
    tokens[token_count] = NULL;
    return tokens;
}

int main(void) {
    char *input = malloc(BUFFER_SIZE * sizeof(char));
    if (input == NULL) {
        perror("Unable to allocate memory");
        exit(1);
    }

    while (1) {
        printf("$ ");
        fgets(input, BUFFER_SIZE, stdin);
        input[strcspn(input, "\n")] = '\0';  // Remove trailing newline character

        char **tokens = tokenize_input(input);
        for (int i = 0; tokens[i] != NULL; i++) {
            printf("Token %d: %s\n", i, tokens[i]);
        }
        free(tokens);
    }
    free(input);
    return 0;
}

